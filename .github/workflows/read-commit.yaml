# This is a basic workflow to help you get started with Actions
name: Read Commit

# Controls when the workflow will run
on: push
  # Triggers the workflow on push or pull request events but only for the "main" branch
  # push:
  #   branches: ["read-commit"]
  # pull_request:
  #   branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    jobs:
      test-commit: 
        steps:
          # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
          - uses: actions/checkout@v3

          # Runs a single command using the runners shell
          - name: Run a one-line script
            run: echo Hello, world!

          # Runs a set of commands using the runners shell
          # - name: Run a multi-line script
          #   run: |
          #     echo Add other actions to build,
          #     echo test, and deploy your project.

          - name: Skip this step on commit "[no action]""
            if: ${{ contains(github.event.head_commit.message, '[no action]') }}
            run: |
              echo "Commit message not contains '[no action]'"
              exit 1

          - name: Run this step on commit "[specific action]"
            if: ${{ contains(github.event.head_commit.message, '[specific action]') }}
            run: |
              echo "Run on commit [specific action]"

          - name: Run for commit "${{ github.event.head_commit.message }}"
            if: always()
            run: |
              echo "Commit message: ${{ github.event.head_commit.message }}"
              echo "Commit author: ${{ github.event.head_commit.author.name }}"
              echo "Commit email: ${{ github.event.head_commit.author.email }}"
              echo "Commit timestamp: ${{ github.event.head_commit.timestamp }}"
              echo "Commit URL: ${{ github.event.head_commit.url }}"
